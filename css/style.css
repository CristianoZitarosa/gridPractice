h1 {
  padding-left: 0.5em;
}

h4,
p {
  padding: 0 1em;
}

.container-one,
.container-two,
.container-three,
.container-four,
.container-five,
.container-six,
.container-seven,
.container-eight,
.container-nine {
  display: grid;
  border: 1px solid #000;
  border-radius: 3px;
  margin: 1em;
}

.container-two {
  grid-template-columns: repeat(3, 200px);
}

.container-three {
  grid-template-columns: repeat(3, 1fr);
}

.container-four {
  grid-template-columns: 1fr 2fr 3fr;
}

.container-five {
  grid-template-columns: 1fr 200px 1fr;
}

.container-six {
  grid-template-columns: 1fr 200px 1fr;
  grid-auto-rows: 200px;
}

.container-seven,
.container-nine {
  grid-template-columns: 1fr 250px 1fr;
  grid-auto-rows: 100px;
}

.element { /* except containers 6, 7 & 9 */
  height: 50px;
  border: 1px solid #fff;
  border-radius: 3px;
  background-color: #d6d6d6;
}

/* I directly call 6, & 7 divs, no point to create new classes, can't use the generic .element' size. Their sizes come from the grid-auto-row, as you can see below */
.container-six div,
.container-seven div {
  border: 1px solid #fff;
  border-radius: 3px;
  background-color: #d6d6d6;
}

/* from here, set up for containers 7 & 9, START */
.one {
  grid-column-start: 1;
  grid-column-end: 2;
  grid-row-start: 1;
  grid-row-end: 3;
}

.two {
  grid-row-start: 2;
  grid-row-end: 3;
}

.three {
  grid-column-start: 1;
  grid-column-end: 4;
  grid-row-start: 3;
  grid-row-end: 4;
}

.four {
  grid-column-start: 2;
  grid-column-end: 4;
  grid-row-start: 4;
  grid-row-end: 5;
}

.five {
  grid-column-start: 3;
  grid-column-end: 4;
  grid-row-start: 5;
  grid-row-end: 7;
}
/* to here, set up for containers 7 & 9, END */

.container-eight {
  grid-template-columns: repeat(2, 1fr);
  grid-column-gap: 10px;
  grid-row-gap: 1em;
}

/* container 9 and sub-containers START */
.container-nine {
  border: 1px solid #000;
  border-radius: 3px;
}

.two,
.three,
.four {
  background-color: #d6d6d6;
  border-radius: 3px;
  border: 1px solid #fff;
}

/*  cells 1 & 5 of container 9 are now container of nested cells */
.one-container {
  display: grid;
  border-radius: 3px;
  border: 1px solid #fff;
  /*grid-row-gap: 1em;*/
  background-color: #d6d6d6;
}

.five-container {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  /*grid-column-gap: 15px;*/
  background-color: #d6d6d6;
}

.one-container div,
.five-container div {
  background-color: #BBB;
  border-radius: 3px;
  border: 1px solid #fff;
}
/* container 9 and sub-containers END */

/* container 10 and sub-containers START */
.container-ten {
  display: grid;
  border: 1px solid #000;
  border-radius: 3px;
  margin: 1em;
  grid-template-columns: repeat(2, 1fr);
  grid-auto-rows: 100px;
}

.container-ten div {
  border: 1px solid #fff;
  border-radius: 3px;
  }

.one-ten {
  grid-column-start: 1;
  grid-column-end: 2;
  grid-row-start: 1;
  grid-row-end: 3;
  z-index: 1;
  background-color: #ff3;
}

.two-ten {
  grid-column-start: 2;
  grid-column-end: 4;
  grid-row-start: 1;
  grid-row-end: 3;
  z-index: 1;
  background-color: #ff3;
}

.three-ten {
  grid-column-start: 1;
  grid-column-end: 3;
  grid-row-start: 2;
  grid-row-end: 4;
  z-index: 2;
  background-color:rgba(0, 255, 255, 0.5);
}

.four-ten {
  grid-column-start: 1;
  grid-column-end: 2;
  grid-row-start: 3;
  grid-row-end: 5;
  z-index: 1;
  background-color: #ff3
}

.five-ten {
  grid-column-start: 2;
  grid-column-end: 4;
  grid-row-start: 3;
  grid-row-end: 5;
  z-index: 3;
  position: relative; /* Needed to fix EDGE issue, otherwise it would not activate the z-index*/
  background-color: rgba(255, 102, 0, 0.8 );
}
/* container 10 and sub-containers START */
